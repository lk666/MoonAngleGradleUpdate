import java.text.SimpleDateFormat
apply plugin: 'com.android.application'
def gitNum =  'git rev-list --count HEAD'.execute([], project.rootDir).text.trim()
def buildTime() {     def df = new SimpleDateFormat("yyyyMMdd'_'HH")
    df.setTimeZone(TimeZone.getDefault())
    return df.format(new Date()) }
android {
    compileSdkVersion 22
    buildToolsVersion '23.0.3'

    signingConfigs {
        release {
            storeFile file('./BlueMoon.keystore')
            storePassword "bluemoon"
            keyAlias "bluemoon"
            keyPassword "!12345678"
        }
        //debug签名是友盟分享要求添加的
        debug {
            storeFile file('debug.keystore')
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    defaultConfig {
        applicationId "cn.com.bluemoon.delivery"
        minSdkVersion 12
        targetSdkVersion 21
        versionCode 26
        versionName "4.4.2"
        buildConfigField("String", "BUILD_CODE", "\"${gitNum}\"")

        /*个推*/
        manifestPlaceholders = [
                GETUI_APP_ID    : "pEvvQdiNbwAkKpPFIH67G1",
                GETUI_APP_KEY   : "48F1zr3EV59dSUCEiICEC2",
                GETUI_APP_SECRET: "4YzSLDklzJAdISZQCG5Or6",
                PACKAGE_NAME    : applicationId
        ]
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "mips", "mips64", "x86", "x86_64"
        }

    }

    buildTypes {
        debug {
            buildConfigField("boolean", "RELEASE", "false")
            buildConfigField "String", "MOCK_URL", "\"http://192.168.240.15:8080/mockjsdata/27/%s\""
            buildConfigField "String", "MOCK_URL_SZ", "\"http://192.168.237.2/%s\""
            buildConfigField "String", "ADDRESS_URL", "\"http://mallapi.bluemoon.com.cn/%s\""
            buildConfigField "String", "HOST", "\"angelapi.bluemoon.com.cn\""
            buildConfigField "String", "API_URL", "\"http://angelapi.bluemoon.com.cn:8882/%s\""
            buildConfigField "String", "API_URL_SZ", "\"https://tm.bluemoon.com.cn/%s\""
            buildConfigField "String", "PUNCH_DETAILDS_DOMAIN", "\"http://tmallapi.bluemoon.com.cn/%s\""
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('debug.apk')) {
                        def fileName = "月亮天使_${buildTime()}_测试版_${defaultConfig.versionName}(${gitNum}).apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
        release {
            buildConfigField("boolean", "RELEASE", "true")
            buildConfigField "String", "MOCK_URL", "\"http://192.168.240.15:8080/mockjsdata/27/%s\""
            buildConfigField "String", "MOCK_URL_SZ", "\"http://192.168.237.2/%s\""
            buildConfigField "String", "ADDRESS_URL", "\"http://mallapi.bluemoon.com.cn/%s\""
            buildConfigField "String", "HOST", "\"angel.bluemoon.com.cn\""
            buildConfigField "String", "API_URL", "\"http://angel.bluemoon.com.cn/%s\""
            buildConfigField "String", "API_URL_SZ", "\"https://tm.bluemoon.com.cn/%s\""
            buildConfigField "String", "PUNCH_DETAILDS_DOMAIN", "\"http://mallapi.bluemoon.com.cn/%s\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('release.apk')) {
                        def fileName = "月亮天使_${buildTime()}_正式版_${defaultConfig.versionName}(${gitNum}).apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }

        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    dexOptions{
        incremental true
        javaMaxHeapSize "2048m"
        jumboMode true
        preDexLibraries false
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets', 'src/main/assets/']
            jniLibs.srcDirs = ['libs']
        }
    }
}

dependencies {
    compile fileTree(include: ['*.*'], dir: 'libs')
    compile project(':BlueMoonSDK')
    compile project(':lib_badger')
    compile 'org.apache.httpcomponents:httpcore:4.4.2'
    compile 'junit:junit:4.12'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.github.bumptech.glide:glide:3.6.1'
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.github.chrisbanes.photoview:library:1.2.4'
    compile 'com.getui:sdk:2.9.3.0'
    compile project(':lib_umengshare')
}



